# Task ID: 39
# Title: Audit and Enforce .cursorrules Compliance for Sandbox Source Files (P0 Hygiene)
# Status: pending
# Dependencies: None
# Priority: high
# Description: Review all code files in _macOS/FinanceMate-Sandbox/Sources/ for missing or incomplete .cursorrules-compliant comment blocks, code quality ratings, and complexity rankings. For any file below 70% compliance or missing required elements, create a P0 refactor task to achieve >90% compliance and log as a P0 hygiene issue.
# Details:
Conduct a thorough audit of every code file within _macOS/FinanceMate-Sandbox/Sources/. For each file, verify the presence and completeness of .cursorrules-compliant comment blocks, including code quality ratings and complexity rankings as mandated by project standards. Use the latest .cursorrules definitions as reference for required comment structure and content. For files lacking these elements or scoring below 70% compliance, document the deficiencies and immediately create a P0 refactor task to bring the file to greater than 90% compliance. Ensure all findings and new hygiene tasks are logged in the project tracker, clearly referencing the affected files and specific compliance gaps. Maintain a clear audit trail for future reviews and team accountability.

# Test Strategy:
Randomly sample at least 30% of audited files to verify that .cursorrules-compliant comment blocks, code quality ratings, and complexity rankings are present and accurate. Confirm that all files previously below 70% compliance now meet or exceed 90% compliance after refactor tasks are completed. Review the project tracker to ensure all P0 hygiene tasks are logged with clear references to the original audit findings and that no files are missing required documentation or ratings.

# Subtasks:
## 1. Create .cursorrules Compliance Checker Script [pending]
### Dependencies: None
### Description: Develop an automated script to scan all code files in _macOS/FinanceMate-Sandbox/Sources/ and evaluate their compliance with .cursorrules standards
### Details:
Write a script that recursively traverses the Sources directory, identifies all code files, and checks each file for the presence of required comment blocks, quality ratings, and complexity rankings as defined in the latest .cursorrules. The script should calculate a compliance percentage for each file based on the presence and completeness of required elements. Output should be a structured report listing all files with their compliance scores and specific missing elements.

## 2. Extract and Document Current .cursorrules Requirements [pending]
### Dependencies: None
### Description: Extract all comment block requirements, quality rating standards, and complexity ranking criteria from the latest .cursorrules definitions
### Details:
Create a comprehensive document that clearly outlines all required elements for comment blocks, the format and scale for quality ratings, and the methodology for complexity rankings. This document will serve as the reference standard for the compliance audit. Include examples of fully compliant comment blocks for different file types and create a checklist of required elements that can be used during manual reviews.

## 3. Perform Full Compliance Audit of Source Files [pending]
### Dependencies: 39.1, 39.2
### Description: Execute the compliance checker script against all files in the Sources directory and compile comprehensive audit results
### Details:
Run the compliance checker script on the entire _macOS/FinanceMate-Sandbox/Sources/ directory. Generate a detailed report that identifies all files below 70% compliance, categorizing issues by type (missing comment blocks, incomplete quality ratings, missing complexity rankings, etc.). The report should include file paths, current compliance percentages, and specific missing elements for each file. Sort results by compliance percentage to prioritize the most critical files.

## 4. Create P0 Refactor Tasks for Non-Compliant Files [pending]
### Dependencies: 39.3
### Description: For each file below 70% compliance, create detailed P0 refactor tasks in the project tracking system
### Details:
Using the audit results, create individual P0 refactor tasks for each non-compliant file. Each task should include the file path, current compliance percentage, specific missing elements, and clear instructions for bringing the file to >90% compliance. Set all tasks to 'pending' status. Group related files when appropriate to streamline the refactoring process. Include references to the .cursorrules requirements document to guide developers during implementation.

## 5. Generate Compliance Audit Summary Report [pending]
### Dependencies: 39.3, 39.4
### Description: Create a comprehensive summary report of the compliance audit findings and refactor task creation
### Details:
Compile a summary report that includes overall compliance statistics (percentage of compliant files, average compliance score, number of files requiring refactoring), a list of all P0 refactor tasks created, and recommendations for preventing compliance issues in future development. The report should highlight patterns of non-compliance that might indicate systemic issues in the development process. Include a section on the impact of non-compliance on code quality and project maintenance.

